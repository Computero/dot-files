#!/bin/bash

# Test which OS the user runs
# $1 - cmd to test
os_is() {
  if [[ "$OSTYPE" == $1* ]]; then
    return 0
  fi
  return 1
}

# Header logging
e_header() {
  if os_is 'darwin'; then
    printf -e "\n$(tput setaf 7)%s$(tput sgr0)\n" "$@"
  else
    printf -e "\n\033[0;37m%s\033[m\n" "$@"
  fi
}

# Success logging
e_success() {
  if os_is 'darwin'; then
    printf -e "$(tput setaf 64)✓ %s$(tput sgr0)\n" "$@"
  else
    printf -e "\033[0;32m✓ %s\033[m\n" "$@"
  fi
}

# Error logging
e_error() {
  if os_is 'darwin'; then
    printf -e "$(tput setaf 1)x %s$(tput sgr0)\n" "$@"
  else
    printf -e "\033[0;31mx %s\033[m\n" "$@"
  fi
}

# Warning logging
e_warning() {
  if os_is 'darwin'; then
    printf -e "$(tput setaf 136)! %s$(tput sgr0)\n" "$@"
  else
    printf -e "\033[0;33m! %s\033[m\n" "$@"
  fi
}

# Test whether we're in a git repo
is_git_repo() {
  $(git rev-parse --is-inside-work-tree &> /dev/null)
}

# Test whether a command exists
# $1 - cmd to test
type_exists() {
  if [ $(type -P $1) ]; then
    return 0
  fi
  return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
  if $(brew list $1 >/dev/null); then
    printf %s "already installed.\n" "$1"
    return 0
  fi

  e_warning "Missing formula: $1"
  return 0
}
