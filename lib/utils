#!/bin/bash
# Common utilities used by the dotfiles installation script

# Header logging
log_header() {
    if [[ $(type -P tput) ]]; then
        printf "\n$(tput setaf 7)%s$(tput sgr0)\n" "$@"
    else
        printf "\n\033[1;37m%s\033[m\n" "$@"
    fi
}

# Success logging
log_success() {
    if [[ $(type -P tput) ]]; then
        printf "$(tput setaf 64)✓ %s$(tput sgr0)\n" "$@"
    else
        printf "\033[0;32m✓ %s\033[m\n" "$@"
    fi
}

# Error logging
log_error() {
    if [[ $(type -P tput) ]]; then
        printf "$(tput setaf 1)✗ %s$(tput sgr0)\n" "$@"
    else
        printf "\033[0;31m✗ %s\033[m\n" "$@"
    fi
}

# Warning logging
log_warning() {
    if [[ $(type -P tput) ]]; then
        printf "$(tput setaf 136)! %s$(tput sgr0)\n" "$@"
    else
        printf "\033[0;33m! %s\033[m\n" "$@"
    fi
}

# Ask for confirmation before proceeding
seek_confirmation() {
    printf "\n"
    log_warning "$@"
    read -p "Continue? (y/n) " -n 1
    printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
is_confirmed() {
    if [[ "${REPLY}" == "Y" || "${REPLY}" == "y" ]]; then
        return 0
    fi
    return 1
}

# Test whether we're in a git repo
is_git_repo() {
    $(git rev-parse --is-inside-work-tree &> /dev/null)
}

# Test which OS the user runs
# $1 - OS to test
is_os() {
    if [[ "${OSTYPE}" == $1* ]]; then
        return 0
    fi
    return 1
}

# Test whether a command exists
# $1 - cmd to test
type_exists() {
    if [[ $(type -P $1) ]]; then
        return 0
    fi
    return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
    if [[ $(brew list $1 >/dev/null) ]]; then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    log_warning "Missing formula: $1"
    return 1
}

# Test whether a APT package is already installed
# $1 - package name
package_exists() {
    if [[ $(dpkg -l $1 2>/dev/null) ]]; then
        printf "%s already installed.\n" "$1"
        return 0
    fi

    printf "Missing package: $1\n"
    return 1
}

# Test whether a PPA repository is already added
# $1 - repository (without `ppa:`)
ppa_exists() {
    if [[ $(grep -i "^deb.*$1" /etc/apt/sources.list.d/* 2>/dev/null) ]]; then
        printf "%s already added.\n" "$1"
        return 0
    fi

    printf "Missing repository: $1\n"
    return 1
}
